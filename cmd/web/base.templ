package web

templ Base() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<title>Go Blueprint Hello</title>
			<script src="/js/htmx.min.js"></script>
		</head>
		<body>
			<main id="main">
				{ children... }
			</main>
		</body>
	</html>
}

templ Navbar(themes []string) {
	<nav>
		<div class="navbar bg-base-100 max-w-5xl mx-auto">
			<div class="navbar-start">
				<div class="dropdown rounded-md">
					<div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16"></path></svg>
					</div>
					<ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
						<li><a>new chat</a></li>
						<li>
							<a>dir</a>
							<ul class="p-2">
								<li><a>about plugtalk</a></li>
								<li><a>github docs</a></li>
							</ul>
						</li>
						<li><a>home</a></li>
					</ul>
				</div>
				<a class="btn btn-ghost text-xl p-2 rounded-md">ðŸ”ŒðŸ—£ plugtalk  </a>
			</div>
			<div class="navbar-center hidden lg:flex">
				<ul class="menu menu-horizontal px-1 rounded-md">
					<li><a href="/chat">new chat</a></li>
					<li>
						<details>
							<summary>dir</summary>
							<ul class="p-2">
								<li><a>about plugtalk</a></li>
								<li><a>github docs</a></li>
							</ul>
						</details>
					</li>
					<li><a>home</a></li>
				</ul>
			</div>
			<div class="navbar-end">
				@Select(themes)
			</div>
		</div>
	</nav>
}

templ Select(options []string) {
	<select class="select select-sm select-bordered w-full max-w-40 rounded-md" id="theme-select">
		<option disabled>pick a theme</option>
		for _, option := range options {
			<option id={ option }>{ option }</option>
		}
	</select>
}

templ Chat(themes []string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<title>PlugTalk | Chat</title>
			<link href="/css/output.css" rel="stylesheet"/>
			<meta
				name="viewport"
				content="width=device-width, height=device-height, initial-scale=1.0, minimum-scale=1, maximum-scale=1, user-scalable=no"
			/>
			<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"/>
			<meta http-equiv="Pragma" content="no-cache"/>
			<meta name="htmx-config" content='{"useTemplateFragments": true}'/>
			<meta http-equiv="Expires" content="0"/>
			<link href="https://unpkg.com/sanitize.css" rel="stylesheet"/>
			<link href="https://unpkg.com/sanitize.css/typography.css" rel="stylesheet"/>
			<link href="https://unpkg.com/sanitize.css/forms.css" rel="stylesheet"/>
			<script type="module" src="/js/htmx.min.js"></script>
			<script type="module" src="/js/theme.min.js"></script>
			<script defer>
        htmx.on("htmx:load", function (evt) {
            var eleID = evt.detail.elt.parentElement.attributes["id"]
            if (eleID != undefined && eleID.value == "message-table-tbody") {
                // New message has arrived in chat

                // Focus input when message arrives
                document.getElementById("message-input").focus()

                // Convert UTC datetime from server into local timestamp
                var ts = evt.detail.elt.cells[0]
                if (ts.textContent == "") {
                    // No timestamp provided, skip
                    return
                }
                var d = new Date(ts.textContent)
                ts.innerHTML = d.toLocaleTimeString()
            }
        });
    </script>
		</head>
		<body hx-ws="connect:/websocket/connect">
			@Navbar(themes)
			<h3 class="text-xl font-bold">Your IP</h3>
			<h2 id="ip-addr"></h2>
			<div class="flex flex-col justify-center items-center">
				<div id="mx-auto w-full">
					<h3 id="users" class="text-xl font-bold">Users</h3>
				</div>
				<div id="users-list"></div>
			</div>
			// Messages "From" Someone
			<div class="max-w-5xl mx-auto py-12" id="messages">
				// <div class="chat chat-start">
				// 	<div class="chat-image avatar">
				// 		<div class="w-10 rounded-full">
				// 			<img alt="Tailwind CSS chat bubble component" src="https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg"/>
				// 		</div>
				// 	</div>
				// 	<div class="chat-header">
				// 		Obi-Wan Kenobi
				// 		<time class="text-xs opacity-50">12:45</time>
				// 	</div>
				// 	<div class="chat-bubble">You were the Chosen One!</div>
				// 	<div class="chat-footer opacity-50">
				// 		Delivered
				// 	</div>
				// </div>
				<div class="chat chat-start">
					// <div class="chat-bubble">It's over Anakin, <br/>I have the high ground.</div>
					<div id="non-author-chat"></div>
				</div>
				<div class="chat chat-start">
					<div id="author-chat"></div>
					// <div class="chat-bubble">You underestimate my power!</div>
				</div>
				@Input()
			</div>
		</body>
		<script>
        const tailwindColors = [
  'bg-red-500', 'bg-blue-500', 'bg-green-500', 'bg-yellow-500',
  'bg-purple-500', 'bg-pink-500', 'bg-indigo-500', 'bg-gray-500',
  'text-red-500', 'text-blue-500', 'text-green-500', 'text-yellow-500',
  'text-purple-500', 'text-pink-500', 'text-indigo-500', 'text-gray-500'
];

// Function to get a random color class
function getRandomColorClass() {
  const index = Math.floor(Math.random() * tailwindColors.length);
  return tailwindColors[index];
}

// Apply a random color class to an element
function applyRandomColor() {
  const element = document.getElementById('nickname');
  const colorClass = getRandomColorClass();
  element.className = colorClass;
}

// Call the function on window load
window.onload = applyRandomColor;
</script>
	</html>
}

templ Input() {
	<form class="max-w-full flex flex-row gap-2" hx-ws="send" autocomplete="off">
		<label class="form-control w-full">
			<div class="label">
				<span class="label-text">Enter your message here</span>
			</div>
			<input type="text" placeholder="Type here" name="message" id="message-input" class="input input-bordered w-full"/>
		</label>
		<button class="btn btn-block max-w-20 self-end" value="Send" id="sent-btn" type="submit">Send</button>
	</form>
}

templ About(themes []string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<title>PlugTalk | About</title>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link href="/css/output.css" rel="stylesheet"/>
			<script type="module" src="/js/theme.min.js"></script>
		</head>
		<body>
			@Navbar(themes)
			<div class="prose max-w-2xl mx-auto my-16">
				<h1>About PlugTalk</h1>
				<h2>What is it?</h2>
				<p>
					PlugTalk is chat platform to talk to people nearby.
				</p>
				<p>
					Anyone with the same IP address is in the same chat room. For example, everyone
					in your house will get the same chat room if they visit PlugTalk. If you go to
					your local coffee shop, everyone who visits PlugTalk will be in the same chat room.
					This extends to larger organizations like college/university campuses.
				</p>
				<p>
					Depending on how the network is set up, all mobile devices using data with the same
					network provider as you may be chatting together. Or similarly, all the other homes
					using the same ISP. This is the minority of cases however.
				</p>
				<h2>Why is it?</h2>
				<p>
					For fun, mostly. I wanted to make a chat application and I wanted to use
					<a href="https://htmx.org/">htmx</a>, and this seemed like a fun idea.
				</p>
				<p>
					There are many reasons why PlugTalk isn't useful, and talking to your fellow humans
					face to face
					is much better. However there are a few times when having a local chatroom is useful,
					like for discussing (or dragging) a presentation going on. At the end of the day,
					I'm happy to have made something.
				</p>
				<h2>How do I change my nickname?</h2>
				<p>
					Send this special message: <code>/nick my-new-nickname</code>
					<br/>
					It will go away when you reload the page.
				</p>
				<h2>Source code? Self hosting?</h2>
				<p>
					Of course! PlugTalk is licensed under the <a href="https://www.gnu.org/licenses/agpl-3.0.en.html">AGPLv3</a>,
					and source code is available <a href="https://github.com/Nyumat/plugtalk">on GitHub</a>.
				</p>
				<p>
					You're welcome to host your own version, as long as you comply with the license by publishing your source
					code. Feel free to report bugs and submit PRs as well!
				</p>
				<h2>Contact</h2>
				<p>
					You can email me about PlugTalk at: nyumat 18 (at) gmail (dot) com
				</p>
				<p>
					I'd be happy to hear about any fun stories.
				</p>
			</div>
		</body>
	</html>
}
